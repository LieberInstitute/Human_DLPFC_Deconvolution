Adding LIBD modules
Loading git
Loading LIBD module for git-status-size/github
Loading LIBD module for git-lfs/2.8.0
Loading LIBD module for rmate/1.5.9
Loading LIBD module for ruby/2.6.4p104
Loading conda_R/4.3
**** Job starts ****
Wed Jun 14 16:54:13 EDT 2023
**** JHPCE info ****
User: lhuuki
Job id: 3561783
Job name: TREG_boxplots
Hostname: compute-093.cm.cluster
Task id: undefined
Unloading conda_R/4.3
Loading conda_R/4.3

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV  11) ruby/2.6.4p104
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV      12) rmate/1.5.9
  3) JHPCE_tools/1.0   8) git-status-size/github         13) conda/3-4.11.0
  4) sge/8.1.9         9) git/2.28.0                     14) conda_R/4.3
  5) gcc/4.4.7        10) git-lfs/2.8.0

 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.2     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.4.2     ✔ tibble    3.2.1
✔ lubridate 1.9.2     ✔ tidyr     1.3.0
✔ purrr     1.0.1     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
Loading required package: SummarizedExperiment
Loading required package: MatrixGenerics
Loading required package: matrixStats

Attaching package: ‘matrixStats’

The following object is masked from ‘package:dplyr’:

    count


Attaching package: ‘MatrixGenerics’

The following objects are masked from ‘package:matrixStats’:

    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,
    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,
    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,
    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,
    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,
    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,
    colWeightedMeans, colWeightedMedians, colWeightedSds,
    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,
    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,
    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,
    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,
    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,
    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,
    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,
    rowWeightedSds, rowWeightedVars

Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:dplyr’:

    combine, intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, aperm, append, as.data.frame, basename, cbind,
    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,
    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,
    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,
    Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort,
    table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:lubridate’:

    second, second<-

The following objects are masked from ‘package:dplyr’:

    first, rename

The following object is masked from ‘package:tidyr’:

    expand

The following object is masked from ‘package:utils’:

    findMatches

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges

Attaching package: ‘IRanges’

The following object is masked from ‘package:lubridate’:

    %within%

The following objects are masked from ‘package:dplyr’:

    collapse, desc, slice

The following object is masked from ‘package:purrr’:

    reduce

Loading required package: GenomeInfoDb
Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.


Attaching package: ‘Biobase’

The following object is masked from ‘package:MatrixGenerics’:

    rowMedians

The following objects are masked from ‘package:matrixStats’:

    anyMissing, rowMedians

here() starts at /dcs04/lieber/lcolladotor/deconvolution_LIBD4030/Human_DLPFC_Deconvolution
Loading objects:
  cell_type_colors_halo
Loading objects:
  sce
Loading required package: HDF5Array
Loading required package: DelayedArray
Loading required package: Matrix

Attaching package: ‘Matrix’

The following object is masked from ‘package:S4Vectors’:

    expand

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

Loading required package: S4Arrays

Attaching package: ‘S4Arrays’

The following object is masked from ‘package:base’:

    rowsum


Attaching package: ‘DelayedArray’

The following object is masked from ‘package:purrr’:

    simplify

The following objects are masked from ‘package:base’:

    apply, scale, sweep

Loading required package: rhdf5

Attaching package: ‘HDF5Array’

The following object is masked from ‘package:rhdf5’:

    h5ls

class: SingleCellExperiment 
dim: 36601 56447 
metadata(3): Samples cell_type_colors cell_type_colors_broad
assays(3): counts binomial_deviance_residuals logcounts
rownames(36601): MIR1302-2HG FAM138A ... AC007325.4 AC007325.2
rowData names(7): source type ... gene_type binomial_deviance
colnames(56447): 1_AAACCCAAGTTCTCTT-1 1_AAACCCACAAGGTCTT-1 ...
  19_TTTGTTGTCTCATTGT-1 19_TTTGTTGTCTTAAGGC-1
colData names(32): Sample Barcode ... cellType_layer layer_annotation
reducedDimNames(4): GLMPCA_approx TSNE UMAP HARMONY
mainExpName: NULL
altExpNames(0):
[1] 36601 56447
Loading objects:
  sce_pan
       
        Astro  Endo Macro Micro Mural Oligo   OPC Tcell Excit Inhib
  amy    1638    31     0  1168    39  6080  1459    31   443  3117
  dlpfc   782     0    10   388    18  5455   572     9  2388  1580
  hpc    1170     0     0  1126    43  5912   838    26   623   366
  nac    1099     0    22   492     0  6134   669     0     0 11476
  sacc    907     0     0   784     0  4584   911     0  4163  3974
   MALAT1      AKT3    ARID1B 
0.9961203 0.8538098 0.8009460 

       Astro EndoMural_01 EndoMural_02        Micro     Oligo_01     Oligo_02 
        3979          446         1711         1601         1868         4732 
    Oligo_03          OPC     Excit_01     Excit_02     Excit_03     Excit_04 
        4294         1940         7927         2487         1309         2171 
    Excit_05     Excit_06     Excit_07     Excit_08     Excit_09     Excit_10 
        2532          329          334         1463         2561         1079 
    Excit_11     Excit_12     Excit_13     Excit_14     Excit_15     Inhib_01 
         482          420         1567           82           66         5366 
    Inhib_02     Inhib_03     Inhib_04     Inhib_05     Inhib_06    Ambiguous 
        1267         1310          565         1192         1367            0 
# A tibble: 7 × 2
  cellType median_sum
  <fct>         <dbl>
1 Excit         21758
2 Inhib         16278
3 OPC            5951
4 Endo           3760
5 Oligo          3448
6 Astro          3280
7 Micro          2633
# A tibble: 6 × 2
  cellType median_sum
  <fct>         <dbl>
1 Excit        35262.
2 Inhib        21790.
3 OPC           9112 
4 Oligo         6385 
5 Astro         5737 
6 Micro         3884.
`summarise()` has grouped output by 'datatype', 'dataset'. You can override
using the `.groups` argument.
Saving 7 x 7 in image
Saving 10 x 7 in image
Saving 7 x 7 in image
Loading objects:
  halo_all

 Oligo  Excit  Inhib  Multi  Other 
271101 179856  32148  14996 673699 

  AKT3 ARID1B MALAT1 POLR2A 
301310 285330 292580 292580 
# A tibble: 5 × 2
  cellType      n
  <fct>     <int>
1 Oligo     60887
2 Excit     48348
3 Inhib     17038
4 Multi      3064
5 Other    155005
Loading objects:
  halo_all
  cellType       n
1    Excit  141542
2    Inhib   94430
3     Endo   59853
4    Oligo   87534
5    Astro  240751
6    Micro   30016
7    Other 1031681
`summarise()` has grouped output by 'datatype', 'dataset'. You can override
using the `.groups` argument.
Joining with `by = join_by(dataset, set_ct)`
Joining with `by = join_by(dataset, set_ct)`
Saving 7 x 7 in image
Error in `geom_boxplot()`:
! Problem while computing aesthetics.
ℹ Error occurred in the 1st layer.
Caused by error:
! object 'cell_type' not found
Backtrace:
     ▆
  1. ├─ggplot2::ggsave(treg_box_plot, filename = here(plot_dir, "TREG_boxplot.png"))
  2. │ ├─grid::grid.draw(plot)
  3. │ └─ggplot2:::grid.draw.ggplot(plot)
  4. │   ├─base::print(x)
  5. │   └─ggplot2:::print.ggplot(x)
  6. │     ├─ggplot2::ggplot_build(x)
  7. │     └─ggplot2:::ggplot_build.ggplot(x)
  8. │       └─ggplot2:::by_layer(...)
  9. │         ├─rlang::try_fetch(...)
 10. │         │ ├─base::tryCatch(...)
 11. │         │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 12. │         │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 13. │         │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 14. │         │ └─base::withCallingHandlers(...)
 15. │         └─ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 16. │           └─l$compute_aesthetics(d, plot)
 17. │             └─ggplot2 (local) compute_aesthetics(..., self = self)
 18. │               └─base::lapply(aesthetics, eval_tidy, data = data, env = env)
 19. │                 └─rlang (local) FUN(X[[i]], ...)
 20. └─base::.handleSimpleError(...)
 21.   └─rlang (local) h(simpleError(msg, call))
 22.     └─handlers[[1L]](cnd)
 23.       └─cli::cli_abort(...)
 24.         └─rlang::abort(...)
Execution halted
**** Job ends ****
Wed Jun 14 16:56:57 EDT 2023
